component: "Denotes the type of the span."
http:
  method: "HTTP request method. E.g. 'GET'."
  url: "Full HTTP request URL in the form 'scheme://host[:port]/path?query[#fragment]'."
  target: "The full request target as passed in a HTTP request line or equivalent."
  host: "The value of the HTTP host header."
  scheme: "The URI scheme identifying the used protocol: 'http' or 'https'"
  status_code: "HTTP response status code. E.g. 200"
  status_text: "HTTP reason phrase. E.g. 'OK'"
  flavor: "Kind of HTTP protocol used: '1.0', '1.1', '2', 'SPDY' or 'QUIC'."
  server_name: "The primary server name of the matched virtual host."
  route: "The matched route (path template). E.g. '/users/:userID?''."
  client_ip: "The IP address of the original client behind all proxies, if known (e.g. from X-Forwarded-For)."
  user_agent: "Value of the HTTP User-Agent header sent by the client."
db:
  type: "Database type."
  instance: "Database instance name."
  statement: "A database statement for the given database type."
  user: "Username for accessing database."
  url: "JDBC substring like 'mysql://db.example.com:3306'"
rpc:
  service: "The service name, must be equal to the $service part in the span name."
net:
  transport: "Transport protocol used."
  peer:
    ip: "Remote address of the peer (dotted decimal for IPv4 or RFC5952 for IPv6)."
    port: "Remote port number as an integer. E.g., 80."
    name: "Remote hostname or similar."
  host:
    ip: "Like 'net.peer.ip' but for the host IP. Useful in case of a multi-IP host."
    port: "Like 'net.peer.port' but for the host port."
    name: "Local hostname or similar."
